swagger: '2.0'
info:
  title: GFW Story API
  description: Global Forest Watch - Story API
  version: "1.0.0"
host: example.vizzuality.com

schemes:
  - https
  - http
# will be prefixed to all paths
basePath: /api/v1
produces:
  - application/vnd.api+json

paths:
  /story/{id}:
    get:
      description: Returns story based on a single ID, if the story not exist return 404
      operationId: getStoryById
      produces:
        - application/vnd.api+json
      tags:
        - Story
      parameters:
        - name: id
          in: path
          description: ID of story to fetch
          required: true
          type: string
      responses:
        200:
          description: Story obtained
          schema:
            $ref: '#/definitions/StoryAPI'
        404:
          description: Story not found
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Errors'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Errors'

  /story:
    post:
      summary: Create story. If user is logged, save the id user in the story
      description: Create story. If user is logged, save the id user in the story
      produces:
        - application/vnd.api+json
      tags:
        - Story
      operationId: createStory
      parameters:
        - name: story
          in: body
          description: Story to save
          required: true
          schema:
            $ref: '#/definitions/StoryCreate'
      responses:
        200:
          description: Story created correctly
          schema:
            $ref: '#/definitions/StoryAPI'
        400:
          description: Validate error
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Errors'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Errors'

    get:
      summary: Obtain all stories
      description: Obtain all stories
      produces:
        - application/vnd.api+json
      tags:
        - Story
      operationId: getStories
      responses:
        200:
          description: The all stories
          schema:
            $ref: '#/definitions/StoryAPI'
        400:
          description: Validate error
          schema:
            $ref: '#/definitions/Errors'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Errors'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Errors'

definitions:
  Errors:
    type: object
    description: Errors
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/Error'

  Error:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: A unique identifier for this particular occurrence of the problem.
      links:
        type: object
        description: A links object
        properties:
          about:
            type: string
            description: A link that leads to further details about this particular occurrence of the problem.
      status:
        type: string
        description: The HTTP status code applicable to this problem, expressed as a string value
      code:
        type: string
        description: An application-specific error code, expressed as a string value
      title:
        type: string
        description: A short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.
      detail:
        type: string
        description: A human-readable explanation specific to this occurrence of the problem. Like title, this field's value can be localized
      source:
        type: object
        description: An object containing references to the source of the error, optionally including any of the following members
        properties:
          pointer:
            type: string
            description: A JSON Pointer [RFC6901] to the associated entity in the request document
          parameter:
            type: string
            description: A string indicating which URI query parameter caused the error.
      meta:
        type: object
        description: A meta object containing non-standard meta-information about the error.


  StoryAPI:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Story'

  Story:
    type: object
    properties:
      type:
        type: string
        description: Resource type
      id:
        type: string
        description: Resource id
      attributes:
        properties:
          schema:
            $ref: '#/definitions/StoryData'
  StoryData:
    type: object
    properties:
      name:
        type: string
      title:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string
      visible:
        type: boolean
      details:
        type: string
      date:
        type: string
      email:
        type: string
      location:
        type: string
      userId:
        type: string
      lat:
        type: number
        format: float
      lng:
        type: number
        format: float
      media:
        type: array
        items:
          properties:
            url:
              type: string
            embedUrl:
              type: string
            previewUrl:
              type: string
            mimeType:
              type: string
            order:
              type: number
              format: integer
  StoryCreate:
    type: object
    properties:
      loggedUser:
        type: object
        description: Attribute seted by api-gateway when the user is logged
        properties:
          schema:
            $ref: '#/definitions/LoggedUser'
      name:
        type: string
      title:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string
      visible:
        type: boolean
      details:
        type: string
      date:
        type: string
      email:
        type: string
      location:
        type: string
      lat:
        type: number
        format: float
      lng:
        type: number
        format: float
      media:
        type: array
        items:
          properties:
            url:
              type: string
            embedUrl:
              type: string
            previewUrl:
              type: string
            mimeType:
              type: string
            order:
              type: number
              format: integer
      geojson:
        type: object
        properties:
          type:
            type: string
          coordinates:
            type: array
            items:
              type: number
              format: float
  LoggedUser:
    type: object
    properties:
      type:
        type: string
        description: Resource type
      id:
        type: string
        description: Resource id
      attributes:
        properties:
          schema:
            $ref: '#/definitions/UserData'
  UserData:
    type: object
    properties:
      fullName:
        type: string
      provider:
        type: string
        description: Provider of oauth
      providerId:
        type: string
        description: Id of provider obtained in the authentication
      email:
        type: string
      createdAt:
        type: string
      sector:
        type: string
      primaryResponsabilities:
        type: string
      country:
        type: string
      state:
        type: string
      city:
        type: string
      howDoYouUse:
        type: string
